{"version":3,"sources":["../../src/pages/cadastrar/cadastrar.module.ts","../../src/pages/cadastrar/cadastrar.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACJ;AAU5C;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAR/B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,iEAAa;aACd;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,iEAAa,CAAC;aACxC;SACF,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACZU;AACI;AACsB;AACf;AACwB;AACjB;AAO5D;IAME,uBAAmB,WAAwB,EAAU,UAA8B,EACzE,OAAsB,EAAS,SAAoB,EAAU,OAAsB;QAD1E,gBAAW,GAAX,WAAW,CAAa;QAAU,eAAU,GAAV,UAAU,CAAoB;QACzE,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,YAAO,GAAP,OAAO,CAAe;QAE3F,iCAAiC;QACjC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACtC,0BAA0B;QAC1B,IAAI,CAAC,SAAS,CAAC,0BAA0B,CAAC,SAAS,CAAC,CAAC;QAErD,IAAI,UAAU,GAAG,mGAAmG,CAAC;QAErH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1D,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACtF,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/D,CAAC,CAAC;IAEL,CAAC;IAGD,gCAAQ,GAAR;QAAA,iBAiBC;QAhBC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,QAAQ,CAAC;aAC5D,IAAI,CAAC,UAAC,IAAS;YACd,KAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC;YACnD,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QACrB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAK;YAEX,IAAG,KAAK,CAAC,MAAM,IAAI,GAAG,EAAC;gBACrB,KAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7D;iBACG;gBACF,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBAC7B,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,wDAAwD,CAAC,CAAC;aACnF;QAEH,CAAC,CAAC;IACJ,CAAC;IA1CU,aAAa;QAJzB,wEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;WACG;SAC9B,CAAC;4OAOgC,CAAW,CAAwC;YAChE,UAA0E;OAPlF,aAAa,CA4CzB;IAAD,CAAC;AAAA;SA5CY,aAAa,e","file":"6.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { CadastrarPage } from './cadastrar';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CadastrarPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(CadastrarPage),\r\n  ],\r\n})\r\nexport class CadastrarPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/cadastrar/cadastrar.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController } from 'ionic-angular';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { ConexaoApiProvider } from '../../providers/conexao-api/conexao-api';\r\nimport { UtilsProvider } from '../../providers/utils/utils';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-cadastrar',\r\n  templateUrl: 'cadastrar.html',\r\n})\r\nexport class CadastrarPage {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  signupForm: FormGroup;\r\n\r\n  constructor(public formBuilder: FormBuilder, private conexaoApi: ConexaoApiProvider,\r\n    private navCtrl: NavController,private statusBar: StatusBar, private utilsPr: UtilsProvider) {\r\n\r\n    // let status bar overlay webview\r\n    this.statusBar.overlaysWebView(false);\r\n    // set status bar to white\r\n    this.statusBar.backgroundColorByHexString('#311734');\r\n\r\n    let emailRegex = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\r\n\r\n    this.signupForm = this.formBuilder.group({\r\n      name: ['', [Validators.required, Validators.minLength(3)]],\r\n      email: ['', Validators.compose([Validators.required, Validators.pattern(emailRegex)])],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n    });\r\n\r\n  }\r\n\r\n\r\n  onSubmit(){\r\n    this.conexaoApi.userStore(this.name,this.email,this.password)\r\n    .then((data: any)=>{\r\n      this.utilsPr.alertInformation(data.json().message);\r\n      this.navCtrl.pop();\r\n    })\r\n    .catch((error)=> {\r\n\r\n      if(error.status == 422){\r\n        this.utilsPr.alertInformation(error.json().errors.email[0]);\r\n      }\r\n      else{\r\n        console.log(\"Erro: \", error);\r\n        this.utilsPr.alertError(\"Não foi possível cadastrar o usuario! Tente novamente.\");\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/cadastrar/cadastrar.ts"],"sourceRoot":""}